###**Uptime Checker**
##**Uptime Checker is a robust FullStack Node.js and JavaScript application, meticulously crafted without relying on external libraries. This REST API is a testament to the remarkable capabilities of Node.js, showcasing its versatility and power in tackling diverse tasks, using CommonJS and ES6 modules.**

#**Key Features**
-Authentication : Secure user authentication and token generation.
-External API Integration : Seamlessly connects to external APIs.
-Background Workers : Executes background tasks efficiently.
-Logging : Comprehensive logging for monitoring and troubleshooting.
-Command Line Interface (CLI) : Empowers administrators with system statistics, user information, and logs.
-Testing : Includes unit tests and API tests for code quality assurance.

#**Getting Started**
You need to create a ./lib/.env file and add a secret, lowercase then:

**To run the application locally**:
Change the config.cjs file credentials to your credentials or put them in the .env file and change the references
node index.js

**To access the Command Line Interface (CLI) and accepted commands**:
**Uncomment index.js line 11 and lines 18-23 **
import cli from './lib/cli.cjs';

setTimeout(() => {
    cli.init();
    callback();
}, 50);

node index.js --man
# or
node index.js --help

**Running Tests**
To run tests for quality assurance:
**Uncomment server.cjs lines 210-211**
    console.log('\x1b[36m%s\x1b[0m', "Server listening on port:", config.httpPort);
    console.log('\x1b[33m%s\x1b[0m', 'Background workers started');
    
**Uncomment server.cjs lines 210-211**
    console.log('\x1b[36m%s\x1b[0m', "Server https listening on port:", config.httpsPort);
    console.log('\x1b[33m%s\x1b[0m', 'Background workers started');
    
**Uncomment server.cjs lines 210-211**
    console.log('\x1b[33m%s\x1b[0m','Background workers started');

node test/index.cjs

**Test performance when using POST on the tokens route**
NODE_DEBUG=performance node.index.js

**Running In A Cluster**:
To run the application on multiple cores:
node.js index-cluster.js

#**Note**
While Uptime Checker showcases the prowess of Node.js, please be aware that certain Node.js server configurations may limit some functionalities, such as a read-only filesystem or restricted command-line access. To explore the full potential of this application, we provide a demo account, granting access to the user area.

Feel free to explore the code, contribute, and unleash the power of Node.js with Uptime Checker.